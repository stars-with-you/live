<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd  
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache.xsd">
    <description>apache shiro配置</description>
    <!--自定义密码规则 -->
    <bean id="myPaswordValid" class="com.fl.shiro.MyPaswordValid"></bean>
    <!-- 自定义域 -->
    <bean id="usermanagerrealm" class="com.fl.shiro.UserManagerRealm">
        <!-- <property name="credentialsMatcher" ref="myPaswordValid"></property> -->
    </bean>
    <!-- ehcache开始 -->
    <!-- 缓存配置  -->
    <bean id="ehCacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="classpath:config/shiro/shiro-ehcache.xml" />
    </bean>
    <!-- shiro封装cacheManager -->
    <bean id="shiroCacheManager"
          class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>
    <!-- spring 封装ehcache缓存管理器  -->
    <bean id="springCacheManager"
          class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="ehCacheManager" />
    </bean>
    <!-- 激活spring 缓存注解 -->
    <cache:annotation-driven cache-manager="springCacheManager"/>
    <!-- ehcache结束 -->
    <!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
    <bean id="authenticator" class="com.fl.shiro.CustomizedModularRealmAuthenticator">
        <!-- 配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息 -->
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
        </property>
    </bean>
    <!-- 安全管理器 -->
    <!-- 非集群下的配置中，DefaultWebSecurityManager类不需要注入sessionManager属性，它会使用默认的sessionManager类 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- <property name="realm" ref="usermanagerrealm" /> -->
        <!-- 可以配置多个Realm，其实会把realms属性赋值给ModularRealmAuthenticator的realms属性 -->
        <property name="cacheManager" ref="shiroCacheManager" />
        <property name="authenticator" ref="authenticator"></property>
        <property name="realms">
            <list>
                <ref bean="usermanagerrealm" />
                <!--<ref bean="usernormalrealm"/>-->
            </list>
        </property>
    </bean>
    <bean id="myfilterChainDefinitionMap" class="com.fl.shiro.MyfilterChainDefinitionMap">
        <property name="filterChainDefinitions">
            <value>
                /manager/exit = logout
            </value>
        </property>
    </bean>
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/manager/exit"/>
        <property name="successUrl" value="/template/list"/>
        <property name="filters">
            <map>
                <entry key="authc">
                    <bean class="com.fl.shiro.CustomFormAuthenticationFilter"/>
                </entry>
                <entry key="roles">
                    <bean class="com.fl.shiro.CustomRolesAuthorizationFilter"/>
                </entry>
                <entry key="perms">
                    <bean class="com.fl.shiro.CustomPermissionsAuthorizationFilter"/>
                </entry>
                <!--退出过滤器 -->
                <entry key="logout">
                    <bean class="org.apache.shiro.web.filter.authc.LogoutFilter">
                        <property name="redirectUrl" value="/manager/login"/>
                    </bean>
                </entry>
            </map>
        </property>
        <property name="filterChainDefinitionMap" ref="myfilterChainDefinitionMap"></property>
    </bean>
    <!--保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 开启Shiro注解 -->
    <bean
            class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
            depends-on="lifecycleBeanPostProcessor"/>
    <bean
            class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>