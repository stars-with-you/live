<?xml version="1.0" encoding="UTF-8"?>
<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval 
	: Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。此处表示每隔1800秒重读一次配置文件 -->
<Configuration status="off" monitorInterval="1800">
	<Properties>
		<Property name="logsql">${web:rootDir}/log/logsqls</Property>
		<Property name="logsys">${web:rootDir}/log/logsys</Property>
	</Properties>
	<!--日志级别：TRACE < DEBUG < INFO < WARN < ERROR < FATAL -->
	<!--如果设置为WARN，则低于WARN的信息都不会输出 -->
			<!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<!--日志输出的格式-->
            <!--
                %d{yyyy-MM-dd HH:mm, SSS} : 日志生产时间,输出到毫秒的时间
                %-5level : 输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0
                %c : logger的名称(%logger)
                %t : 输出当前线程名称
                %p : 日志输出格式
                %m : 日志内容，即 logger.info("message")
                %n : 换行符
                %C : Java类名(%F)
                %L : 行号
                %M : 方法名
                %l : 输出语句所在的行数, 包括类名、方法名、文件名、行数
                hostName : 本地机器名
                hostAddress : 本地ip地址
             -->
	<Appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm} %-5level %logger{36} - %msg%n"/>
		</Console>
		<!-- 循环日志文件：日志文件大于阀值的时候，就开始写一个新的日志文件 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 
			fileName : 指定当前日志文件的位置和文件名称 
			filePattern : 指定当发生Rolling时，文件的转移和重命名规则 
			SizeBasedTriggeringPolicy: 指定当文件体积大于size指定的值时，触发Rolling DefaultRolloverStrategy : 指定最多保存的文件个数
			TimeBasedTriggeringPolicy:这个配置需要和filePattern结合使用 注意filePattern中配置的文件重命名规则是${FILE_NAME}_%d{yyyy-MM-dd}_%i，最小的时间粒度是dd，即天， 
			TimeBasedTriggeringPolicy指定的size是1，结合起来就是每1天生成一个新文件 -->

		<RollingRandomAccessFile name="PrintSql"
			fileName="${logsql}/PrintSql.log" filePattern="${logsql}/%d{yyyy-MM-dd}_%i.log.gz">
			<Filters>
				<!--设置只输出级别为INFO的日志-->
				<ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="DEBUG"  onMatch="ACCEPT" onMismatch="DENY" />               
			</Filters>
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm} %-5level %logger{36} - %msg%n" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="1MB" />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<!--信息记录-->
		<RollingRandomAccessFile name="Info"
			fileName="${logsys}/system.log" filePattern="${logsys}/%d{yyyy-MM-dd}_%i.log.gz">
			<Filters>
			    <ThresholdFilter level="WARN" onMatch="DENY" onMismatch="NEUTRAL" />
			    <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />					
			</Filters>
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm} %-5level %class{36} %L %M - %msg%xEx%n" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="1MB" />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>
		<!--错误信息记录 ,包含warn和error-->
		<RollingRandomAccessFile name="WarnError"
			fileName="${logsys}/system.log" filePattern="${logsys}/%d{yyyy-MM-dd}_%i.log.gz">
			<Filters>
			    <ThresholdFilter level="FATAL" onMatch="DENY" onMismatch="NEUTRAL" />
			    <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY" />					
			</Filters>
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm} %-5level %class{36} %L %M - %msg%xEx%n" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="1" />
				<SizeBasedTriggeringPolicy size="1MB" />
			</Policies>
			<DefaultRolloverStrategy max="20" />
		</RollingRandomAccessFile>

		<!--配置异步写日志 -->
		<!-- <Async name="Async">
			<AppenderRef ref="ALL" />
		</Async> -->
	</Appenders>

	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<Loggers>
    <logger name="org.springframework" level="warn"  additivity="false">
            <Appender-Ref ref="WarnError" />
    </logger>
    <logger name="com.fl.mapper" level="debug"  additivity="false">
        	<Appender-Ref ref="PrintSql" />
    </logger>
		<Root level="debug">
			<Appender-Ref ref="Console" />
			<Appender-Ref ref="Info" />
			<Appender-Ref ref="WarnError" />
		</Root>
	</Loggers>
</Configuration>